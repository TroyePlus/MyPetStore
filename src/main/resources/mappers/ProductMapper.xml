<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.csu.mypetstore.persistence.ProductMapper">
    <select id="getProduct" parameterType="string" resultType="product">
    SELECT
      PRODUCTID,
      NAME,
      IMAGE as descriptionImage,
      TEXT as descriptionText,
      CATEGORY as categoryId
    FROM PRODUCT
    WHERE PRODUCTID = #{productId}
  </select>

    <select id="getProductListByCategory" parameterType="string" resultType="product">
    SELECT
      PRODUCTID,
      NAME,
      IMAGE as descriptionImage,
      TEXT as descriptionText,
      CATEGORY as categoryId
    FROM PRODUCT
    WHERE CATEGORY = #{value}
  </select>

    <select id="searchProductList" parameterType="string" resultType="product">
    select
      PRODUCTID,
      NAME,
      IMAGE as descriptionImage,
      TEXT as descriptionText,
      CATEGORY as categoryId
    from PRODUCT
    WHERE lower(name) like #{value}
  </select>

  <select id="getProductListWithName" parameterType="string" resultType="product">
    select
      productid,
      name,
      IMAGE as descriptionImage,
      TEXT as descriptionText,
      category as categoryId
    from product
    <if test="name!=null">
      where name like concat('%',#{name},'%')
    </if>
  </select>

  <select id="getItemCountByProductId" resultType="Label">
    select p.name as label, count(itemid) as count
    from item i inner join product p
    on i.productid = p.productid
    where i.status = "P"
    group by i.productid
  </select>

  <select id="getAllProductId" resultType="string">
    select productid from product
  </select>

  <select id="getProductName" parameterType="String" resultType="String">
    SELECT name from product where name like  concat('%',#{name},'%')
  </select>

  <select id="getAllName"  resultType="String">
    SELECT name from product
  </select>

  <insert id="insertProduct" parameterType="Product">
    insert into product
    (productid, category, name, image, text)
    values (#{productId}, #{categoryId}, #{name},#{descriptionImage}, #{descriptionText})
  </insert>

  <update id="updateProduct" parameterType="Product">
    update product
    <set>
      <if test="product.productId != null">
        productid = #{product.productId},
      </if>
      <if test="product.categoryId != null">
        category = #{product.categoryId},
      </if>
      <if test="product.name !=null">
        name = #{product.name},
      </if>
      <if test="product.descriptionText != null">
        text = #{product.descriptionText},
      </if>
    </set>
    where productid = #{productId}
  </update>

  <update id="updateDescn">
    update product
    <set>
      <if test="image !=null">
        image = #{image},
      </if>
      <if test="text != null">
        text = #{text},
      </if>
    </set>
    where productid = #{id}
  </update>

  <delete id="deleteProduct" parameterType="string">
    delete from product where productid = #{productId}
  </delete>
</mapper>