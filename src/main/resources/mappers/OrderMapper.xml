<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.csu.mypetstore.persistence.OrderMapper">
    <select id="getOrder" resultType="order" parameterType="int">
        select
        BILLADDR1 AS billAddress1,
        BILLADDR2 AS billAddress2,
        BILLCITY,
        BILLCOUNTRY,
        BILLSTATE,
        BILLTOFIRSTNAME,
        BILLTOLASTNAME,
        BILLZIP,
        SHIPADDR1 AS shipAddress1,
        SHIPADDR2 AS shipAddress2,
        SHIPCITY,
        SHIPCOUNTRY,
        SHIPSTATE,
        SHIPTOFIRSTNAME,
        SHIPTOLASTNAME,
        SHIPZIP,
        CARDTYPE,
        COURIER,
        CREDITCARD,
        EXPRDATE AS expiryDate,
        LOCALE,
        ORDERDATE,
        ORDERS.ORDERID,
        TOTALPRICE,
        USERID AS username,
        STATUS
        FROM ORDERS, ORDERSTATUS
        WHERE ORDERS.ORDERID = #{value}
        AND ORDERS.ORDERID = ORDERSTATUS.ORDERID
  </select>

    <select id="getOrdersByUsername" parameterType="string" resultType="order">
        SELECT
        BILLADDR1 AS billAddress1,
        BILLADDR2 AS billAddress2,
        BILLCITY,
        BILLCOUNTRY,
        BILLSTATE,
        BILLTOFIRSTNAME,
        BILLTOLASTNAME,
        BILLZIP,
        SHIPADDR1 AS shipAddress1,
        SHIPADDR2 AS shipAddress2,
        SHIPCITY,
        SHIPCOUNTRY,
        SHIPSTATE,
        SHIPTOFIRSTNAME,
        SHIPTOLASTNAME,
        SHIPZIP,
        CARDTYPE,
        COURIER,
        CREDITCARD,
        EXPRDATE AS expiryDate,
        LOCALE,
        ORDERDATE,
        ORDERS.ORDERID,
        TOTALPRICE,
        USERID AS username,
        STATUS
        FROM ORDERS, ORDERSTATUS
        WHERE ORDERS.USERID = #{value}
        AND ORDERS.ORDERID = ORDERSTATUS.ORDERID
        ORDER BY ORDERDATE
</select>

    <insert id="insertOrder" parameterType="order">
        INSERT INTO ORDERS (ORDERID, USERID, ORDERDATE, SHIPADDR1, SHIPADDR2, SHIPCITY, SHIPSTATE,
        SHIPZIP, SHIPCOUNTRY, BILLADDR1, BILLADDR2, BILLCITY, BILLSTATE, BILLZIP, BILLCOUNTRY,
        COURIER, TOTALPRICE, BILLTOFIRSTNAME, BILLTOLASTNAME, SHIPTOFIRSTNAME, SHIPTOLASTNAME,
        CREDITCARD, EXPRDATE, CARDTYPE, LOCALE)
        VALUES(#{orderId}, #{username}, #{orderDate}, #{shipAddress1}, #{shipAddress2,jdbcType=VARCHAR}, #{shipCity},
        #{shipState}, #{shipZip}, #{shipCountry}, #{billAddress1}, #{billAddress2,jdbcType=VARCHAR}, #{billCity},
        #{billState}, #{billZip}, #{billCountry}, #{courier}, #{totalPrice}, #{billToFirstName}, #{billToLastName},
        #{shipToFirstName}, #{shipToLastName}, #{creditCard}, #{expiryDate}, #{cardType}, #{locale})
    </insert>

    <insert id="insertOrderStatus" parameterType="order">
        INSERT INTO ORDERSTATUS (ORDERID, LINENUM, TIMESTAMP, STATUS)
        VALUES (#{orderId,jdbcType=NUMERIC}, #{orderId,jdbcType=NUMERIC}, #{orderDate,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR})
    </insert>

    <select id="getOrdersByCategory" parameterType="String" resultType="Order">
        select DISTINCT
				BILLADDR1 AS billAddress1,
        BILLADDR2 AS billAddress2,
        BILLCITY,
        BILLCOUNTRY,
        BILLSTATE,
        BILLTOFIRSTNAME,
        BILLTOLASTNAME,
        BILLZIP,
        SHIPADDR1 AS shipAddress1,
        SHIPADDR2 AS shipAddress2,
        SHIPCITY,
        SHIPCOUNTRY,
        SHIPSTATE,
        SHIPTOFIRSTNAME,
        SHIPTOLASTNAME,
        SHIPZIP,
        CARDTYPE,
        COURIER,
        CREDITCARD,
        EXPRDATE AS expiryDate,
        LOCALE,
        ORDERDATE,
        o.orderid,
        TOTALPRICE,
        USERID AS username,
        os.STATUS
from orders o,orderstatus os,lineitem l NATURAL JOIN item i NATURAL JOIN product p WHERE p.category = #{catid} and o.orderid=l.orderid and o.orderid = os.orderid
    </select>

    <select id="getLineItemsByOrder" parameterType="int" resultType="LineItem">
        select l.itemid, l.linenum ,l.orderid ,l.quantity ,l.unitprice from orders natural join lineitem l  where orders.orderid = #{orderid}
    </select>

    <select id="getAllOrders" resultType="Order">
        select 				BILLADDR1 AS billAddress1,
        BILLADDR2 AS billAddress2,
        BILLCITY,
        BILLCOUNTRY,
        BILLSTATE,
        BILLTOFIRSTNAME,
        BILLTOLASTNAME,
        BILLZIP,
        SHIPADDR1 AS shipAddress1,
        SHIPADDR2 AS shipAddress2,
        SHIPCITY,
        SHIPCOUNTRY,
        SHIPSTATE,
        SHIPTOFIRSTNAME,
        SHIPTOLASTNAME,
        SHIPZIP,
        CARDTYPE,
        COURIER,
        CREDITCARD,
        EXPRDATE AS expiryDate,
        LOCALE,
        ORDERDATE,
        o.orderid,
        TOTALPRICE,
        USERID AS username,
        os.STATUS from orders o,orderstatus os where o.orderid = os.orderid
    </select>

    <delete id="deleteOrderById" parameterType="int">
        delete from orders where orderid = #{orderId}
    </delete>

    <delete id="deleteOrderStatusById" parameterType="int">
        delete from orderstatus where orderid = #{orderId}
    </delete>

    <delete id="deleteLineItemsById" parameterType="int">
        delete from lineitem where orderid = #{orderId}
    </delete>

    <update id="updateOrderStatus">
        update orderstatus set status = #{status} where orderid = #{orderId}
    </update>

    <update id="updateLineItemCount" >
        update lineitem set quantity = #{count} where linenum = #{lineNumber}
    </update>

    <update id="updateTotalPrice" parameterType="int">
        update orders set totalprice = #{totalPrice} where orderid = #{orderId}
    </update>

    <insert id="insertDelivery" parameterType="Delivery">
        insert into delivery values(#{orderId},#{courierName},#{deliveryTime})
    </insert>

    <select id="getDeliveryByOrderId" parameterType="int" resultType="Delivery">
        select * from delivery where orderid = #{orderId}
    </select>
</mapper>